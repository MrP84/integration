// breakpoints
$screen-s-breakpoint-max: 479px;
$screen-m-breakpoint-max: 719px;
$screen-l-breakpoint-max: 999px;
$screen-xl-breakpoint-max: 1399px;
$screen-xxl-breakpoint-max: 1799px;

$screen-m-breakpoint-min: $screen-s-breakpoint-max + 1;
$screen-l-breakpoint-min: $screen-m-breakpoint-max + 1;
$screen-xl-breakpoint-min: $screen-l-breakpoint-max + 1;
$screen-xxl-breakpoint-min: $screen-xl-breakpoint-max + 1;
$screen-xxxl-breakpoint-min: $screen-xxl-breakpoint-max + 1;


// rules
$screen-s-rule-max: "max-width: " + $screen-s-breakpoint-max;
$screen-m-rule-max: "max-width: " + $screen-m-breakpoint-max;
$screen-l-rule-max: "max-width: " + $screen-l-breakpoint-max;
$screen-xl-rule-max: "max-width: " + $screen-xl-breakpoint-max;
$screen-xxl-rule-max: "max-width: " + $screen-xxl-breakpoint-max;

$screen-m-rule-min: "min-width: " + $screen-m-breakpoint-min;
$screen-l-rule-min: "min-width: " + $screen-l-breakpoint-min;
$screen-xl-rule-min: "min-width: " + $screen-xl-breakpoint-min;
$screen-xxl-rule-min: "min-width: " + $screen-xxl-breakpoint-min;
$screen-xxxl-rule-min: "min-width: " + $screen-xxxl-breakpoint-min;


// mixins
@mixin media-min($breakpoint: M, $html-class: null, $print: null) {
    $rule: "min-width: 320px";

    @if $breakpoint == M {
        $rule: $screen-m-rule-min;
    }
    @else if $breakpoint == L {
        $rule: $screen-l-rule-min;
    }
    @else if $breakpoint == XL {
        $rule: $screen-xl-rule-min;
    }
    @else if $breakpoint == XXL {
        $rule: $screen-xxl-rule-min;
    }
    @else if $breakpoint == XXXL {
        $rule: $screen-xxxl-rule-min;
    }
    @else {
        $rule: "min-width: " + #{$breakpoint};
    }

    $query: "screen and (" + $rule + ") ";

    @media #{$query} {
        @if $html-class {
            html.#{$html-class} & {
                @content;
            }
        } @else {
            @content;
        }
    }

    @if $print == true {
        @media print {
            @content;
        }
    }
}

@mixin media-max($breakpoint: M, $html-class: null, $print: null) {
    $rule: "max-width: 1920px";

    @if $breakpoint == S {
        $rule: $screen-s-rule-max;
    }
    @else if $breakpoint == M {
        $rule: $screen-m-rule-max;
    }
    @else if $breakpoint == L {
        $rule: $screen-l-rule-max;
    }
    @else if $breakpoint == XL {
        $rule: $screen-xl-rule-max;
    }
    @else if $breakpoint == XXL {
        $rule: $screen-xxl-rule-max;
    }
    @else {
        $rule: "max-width: " + #{$breakpoint};
    }

    $query: "screen and (" + $rule + ") ";

    @media #{$query} {
        @if $html-class {
            html.#{$html-class} & {
                @content;
            }
        } @else {
            @content;
        }
    }

    @if $print == true {
        @media print {
            @content;
        }
    }
}

@mixin media-min-max($breakpoint-min: M, $breakpoint-max: $breakpoint-min, $html-class: null, $print: null) {
    $rule-min: "min-width: 320px";
    $rule-max: "max-width: 1920px";

    @if $breakpoint-min == M {
        $rule-min: $screen-m-rule-min;
    }
    @else if $breakpoint-min == L {
        $rule-min: $screen-l-rule-min;
    }
    @else if $breakpoint-min == XL {
        $rule-min: $screen-xl-rule-min;
    }
    @else if $breakpoint-min == XXL {
        $rule-min: $screen-xxl-rule-min;
    }

    @if $breakpoint-max == M {
        $rule-max: $screen-m-rule-max;
    }
    @else if $breakpoint-max == L {
        $rule-max: $screen-l-rule-max;
    }
    @else if $breakpoint-max == XL {
        $rule-max: $screen-xl-rule-max;
    }
    @else if $breakpoint-max == XXL {
        $rule-max: $screen-xxl-rule-max;
    }

    $query: "screen and (" + $rule-min + ") and (" + $rule-max + ")";

    @media #{$query} {
        @if $html-class {
            html.#{$html-class} & {
                @content;
            }
        } @else {
            @content;
        }
    }

    @if $print == true {
        @media print {
            @content;
        }
    }
}

@mixin media-print {
    @media print {
        @content;
    }
}


// Usage example
// container {
//     // WARNING: the mixin needs to be referenced INSIDE at least one container selector
//     @include media-min(M, svg) {
//         test {
//             background: transparent;
//         }
//     }
// }
